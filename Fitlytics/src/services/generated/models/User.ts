/* tslint:disable */
/* eslint-disable */
/**
 * Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    userName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    normalizedUserName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    normalizedEmail?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    emailConfirmed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    passwordHash?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    securityStamp?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    concurrencyStamp?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    phoneNumberConfirmed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    twoFactorEnabled?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    lockoutEnd?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    lockoutEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    accessFailedCount?: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    firstName: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    lastName: string | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'normalizedUserName': json['normalizedUserName'] == null ? undefined : json['normalizedUserName'],
        'email': json['email'] == null ? undefined : json['email'],
        'normalizedEmail': json['normalizedEmail'] == null ? undefined : json['normalizedEmail'],
        'emailConfirmed': json['emailConfirmed'] == null ? undefined : json['emailConfirmed'],
        'passwordHash': json['passwordHash'] == null ? undefined : json['passwordHash'],
        'securityStamp': json['securityStamp'] == null ? undefined : json['securityStamp'],
        'concurrencyStamp': json['concurrencyStamp'] == null ? undefined : json['concurrencyStamp'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'phoneNumberConfirmed': json['phoneNumberConfirmed'] == null ? undefined : json['phoneNumberConfirmed'],
        'twoFactorEnabled': json['twoFactorEnabled'] == null ? undefined : json['twoFactorEnabled'],
        'lockoutEnd': json['lockoutEnd'] == null ? undefined : (new Date(json['lockoutEnd'])),
        'lockoutEnabled': json['lockoutEnabled'] == null ? undefined : json['lockoutEnabled'],
        'accessFailedCount': json['accessFailedCount'] == null ? undefined : json['accessFailedCount'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userName': value['userName'],
        'normalizedUserName': value['normalizedUserName'],
        'email': value['email'],
        'normalizedEmail': value['normalizedEmail'],
        'emailConfirmed': value['emailConfirmed'],
        'passwordHash': value['passwordHash'],
        'securityStamp': value['securityStamp'],
        'concurrencyStamp': value['concurrencyStamp'],
        'phoneNumber': value['phoneNumber'],
        'phoneNumberConfirmed': value['phoneNumberConfirmed'],
        'twoFactorEnabled': value['twoFactorEnabled'],
        'lockoutEnd': value['lockoutEnd'] == null ? undefined : ((value['lockoutEnd'] as any).toISOString()),
        'lockoutEnabled': value['lockoutEnabled'],
        'accessFailedCount': value['accessFailedCount'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
    };
}

